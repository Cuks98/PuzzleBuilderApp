{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../dictionary.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ImageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵelement(2, \"img\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"img\", 5);\n    i0.ɵɵlistener(\"click\", function ImageComponent_div_0_Template_img_click_4_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.refreshImage();\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.path, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let ImageComponent = /*#__PURE__*/(() => {\n  class ImageComponent {\n    constructor(dictionary) {\n      this.dictionary = dictionary;\n      this.imagesPerCategory = 20;\n      this.imageChange = new EventEmitter();\n      this.path = '';\n      this.pathMobile = '';\n      this.imageText = \"true\";\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {}\n\n    ngOnChanges(changes) {\n      if (changes['folder'] && changes['folder'].currentValue) {\n        this.setPath(changes['folder'].currentValue);\n      }\n    }\n\n    setPath(folder) {\n      this.path = `https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images%2F${folder}%2F${this.image}.jpg?alt=media`;\n      this.pathMobile = `https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images%2F${folder}%2Fmobile%2F${this.image}.jpg?alt=media`;\n    }\n\n    refreshImage() {\n      let image = this.randomImage();\n      this.image = image;\n      this.setPath(this.folder);\n      this.imageChange.emit(image + '');\n    }\n\n    randomImage() {\n      let image = Math.floor(Math.random() * this.imagesPerCategory);\n\n      while (image === this.image) {\n        image = Math.floor(Math.random() * this.imagesPerCategory);\n      }\n\n      return image;\n    }\n\n  }\n\n  ImageComponent.ɵfac = function ImageComponent_Factory(t) {\n    return new (t || ImageComponent)(i0.ɵɵdirectiveInject(i1.DictionaryService));\n  };\n\n  ImageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImageComponent,\n    selectors: [[\"app-image\"]],\n    inputs: {\n      folder: \"folder\",\n      image: \"image\"\n    },\n    outputs: {\n      imageChange: \"imageChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"image\", 4, \"ngIf\"], [1, \"image\"], [1, \"imageWrapper\"], [1, \"image-token\", \"desktop\", 3, \"src\"], [1, \"refreshButtonWrapper\"], [\"src\", \"https://firebasestorage.googleapis.com/v0/b/puzzle-ebd10.appspot.com/o/images%2Frefresh.png?alt=media\", \"alt\", \"refresh\", 1, \"refresh\", 3, \"click\"]],\n    template: function ImageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ImageComponent_div_0_Template, 5, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.imageText);\n      }\n    },\n    directives: [i2.NgIf],\n    styles: [\".refresh[_ngcontent-%COMP%]{width:30px;height:30px;margin:0 5px;position:relative;top:12px;cursor:pointer}.image[_ngcontent-%COMP%]{margin:10px auto;display:flex;max-width:300px;justify-content:center;align-items:center}.imageWrapper[_ngcontent-%COMP%], .imageWrapper[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:300px}\"]\n  });\n  return ImageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}