{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../dictionary.service\";\nimport * as i2 from \"../gamedb.service\";\nimport * as i3 from \"../category/category.component\";\nimport * as i4 from \"../image/image.component\";\nimport * as i5 from \"../stats/stats.component\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../board/board.component\";\n\nfunction GameComponent_app_board_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-board\", 7);\n    i0.ɵɵlistener(\"statsChange\", function GameComponent_app_board_6_Template_app_board_statsChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onStatsChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"folder\", ctx_r0.folder)(\"image\", ctx_r0.image);\n  }\n}\n\nfunction GameComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.end);\n  }\n}\n\nexport let GameComponent = /*#__PURE__*/(() => {\n  class GameComponent {\n    constructor(dictionary, gamedb) {\n      this.dictionary = dictionary;\n      this.gamedb = gamedb;\n      this.imagesPerCategory = 20;\n      this.secondsInAMinute = 60;\n      this.categoryId = -1;\n      this.seconds = 0;\n      this.folder = \"\";\n      this.image = 0;\n      this.over = false;\n      this.time = '';\n      this.moves = 0;\n      this.fails = 0;\n      this.goal = \"\";\n      this.end = \"\";\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {}\n\n    refreshTimer() {\n      this.intervalId = setInterval(() => {\n        if (this.over) {\n          clearInterval(this.intervalId);\n        } else {\n          this.seconds++;\n          let minutes = Math.floor(this.seconds / this.secondsInAMinute);\n          let seconds = this.seconds % this.secondsInAMinute + 's';\n          this.time = minutes ? minutes + 'm ' + seconds : seconds;\n        }\n      }, 1000);\n    }\n\n    reset() {\n      this.moves = 0;\n      this.fails = 0;\n      this.over = false;\n      this.seconds = 0;\n\n      if (this.intervalId) {\n        clearInterval(this.intervalId);\n      }\n\n      this.refreshTimer();\n    }\n\n    onCategoryChange(category) {\n      this.categoryId = category.categoryId;\n      this.folder = category.folder;\n      this.reset();\n      this.image = Math.floor(Math.random() * this.imagesPerCategory);\n    }\n\n    onImageChange(image) {\n      this.image = image;\n      this.reset();\n    }\n\n    onStatsChange(event) {\n      this.moves = event.moves;\n      this.fails = event.fails;\n      this.over = event.over;\n      this.save();\n    }\n\n    save() {\n      console.log(\"fuck\"); // if (this.over) {\n      //     this.gamedb.save({\n      //       categoryId: this.categoryId,\n      //       folder: this.folder,\n      //       image: this.image,\n      //       time: this.time,\n      //       moves: this.moves,\n      //       fails: this.fails\n      //     })\n      // }\n    }\n\n  }\n\n  GameComponent.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.DictionaryService), i0.ɵɵdirectiveInject(i2.GameDBService));\n  };\n\n  GameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    decls: 8,\n    vars: 8,\n    consts: [[\"id\", \"game\", 1, \"game\"], [1, \"info\"], [3, \"categoryChange\"], [3, \"folder\", \"image\", \"imageChange\"], [3, \"time\", \"moves\", \"fails\"], [3, \"folder\", \"image\", \"statsChange\", 4, \"ngIf\"], [\"class\", \"info\", 4, \"ngIf\"], [3, \"folder\", \"image\", \"statsChange\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"app-category\", 2);\n        i0.ɵɵlistener(\"categoryChange\", function GameComponent_Template_app_category_categoryChange_3_listener($event) {\n          return ctx.onCategoryChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"app-image\", 3);\n        i0.ɵɵlistener(\"imageChange\", function GameComponent_Template_app_image_imageChange_4_listener($event) {\n          return ctx.onImageChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"app-stats\", 4);\n        i0.ɵɵtemplate(6, GameComponent_app_board_6_Template, 1, 2, \"app-board\", 5);\n        i0.ɵɵtemplate(7, GameComponent_div_7_Template, 3, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.goal);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"folder\", ctx.folder)(\"image\", ctx.image);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"time\", ctx.time)(\"moves\", ctx.moves)(\"fails\", ctx.fails);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.folder);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.over);\n      }\n    },\n    directives: [i3.CategoryComponent, i4.ImageComponent, i5.StatsComponent, i6.NgIf, i7.BoardComponent],\n    styles: [\".game[_ngcontent-%COMP%]{width:50%;text-align:center;margin:0 auto;min-height:87.3vh}app-category[_ngcontent-%COMP%]{margin:10px 0!important;padding:10px 0}@media screen and (max-width: 700px){.game[_ngcontent-%COMP%]{width:70%}}@media screen and (max-width: 500px){.game[_ngcontent-%COMP%]{width:100%}}\"]\n  });\n  return GameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}